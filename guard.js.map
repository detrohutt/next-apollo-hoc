{"version":3,"sources":["src/guard.js"],"names":["ComposedComponent","opts","WithGuard","Component","getInitialProps","ctx","guard","composedInitialProps","cookieSource","process","browser","document","req","headers","apollo","router","asPath","pathname","query","error","rewind","data","readQuery","e","next","render","props","displayName","decorator"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;;;kBAEe,uBAAa,CAACA,iBAAD,EAAoBC,IAApB,KAA6B;AACvD,QAAMC,SAAN,SAAwB,gBAAMC,SAA9B,CAAwC;;AAKtC,iBAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAIC,QAAQ,IAAZ;;AAEA,UAAIC,uBAAuB,EAA3B;AACA,UAAIP,kBAAkBI,eAAtB,EAAuC;AACrCG,+BAAuB,MAAMP,kBAAkBI,eAAlB,CAAkCC,GAAlC,CAA7B;AACD;;AAED,YAAMG,eAAeC,QAAQC,OAAR,GAAkBC,QAAlB,GAA6BN,IAAIO,GAAJ,CAAQC,OAA1D;AACA,YAAMC,SAAS,oBAAU,IAAV,EAAgB,EAAEN,YAAF,EAAhB,CAAf;AACA,UAAI;AACF,cAAM,kCACJ;AAAA;AAAA,YAAgB,QAAQM,MAAxB;AACE,wCAAC,iBAAD,EAAuBP,oBAAvB;AADF,SADI,EAIJ;AACEQ,kBAAQ;AACNC,oBAAQX,IAAIW,MADN;AAENC,sBAAUZ,IAAIY,QAFR;AAGNC,mBAAOb,IAAIa;AAHL;AADV,SAJI,CAAN;AAYD,OAbD,CAaE,OAAOC,KAAP,EAAc,CACf;;AAED,UAAI,CAACV,QAAQC,OAAb,EAAsB;AACpB,uBAAKU,MAAL;AACD;;AAED,UAAIC,OAAO,IAAX;;AAEA,UAAI;AACFA,eAAOP,OAAOQ,SAAP,CAAiB,EAAEJ,OAAOjB,KAAKiB,KAAd,EAAjB,CAAP;AACD,OAFD,CAEE,OAAOK,CAAP,EAAU;AACVtB,aAAKkB,KAAL,IAAclB,KAAKkB,KAAL,CAAWI,CAAX,CAAd;AACD;;AAED,UAAI;AACFjB,gBAAQ,MAAML,KAAKK,KAAL,CAAWe,IAAX,CAAd;;AAEApB,aAAKuB,IAAL,IAAavB,KAAKuB,IAAL,CAAUlB,KAAV,EAAiBD,GAAjB,CAAb;AACD,OAJD,CAIE,OAAOkB,CAAP,EAAU;AACVtB,aAAKkB,KAAL,IAAclB,KAAKkB,KAAL,CAAWI,CAAX,CAAd;AACD;;AAED;AACEjB;AADF,SAEKC,oBAFL;AAID;;AAEDkB,aAAS;AACP,aACE,8BAAC,iBAAD,EAAuB,KAAKC,KAA5B,CADF;AAGD;AA7DqC;;AAAlCxB,WADiD,CAE9CyB,WAF8C,GAE/B,aAAY,kCAChC3B,iBADgC,CAEhC,GAJmD;AAiEvD,MAAI4B,YAAY1B,SAAhB;AACA,MAAID,KAAKiB,KAAT,EACEU,YAAY,0BAAQ3B,KAAKiB,KAAb,EAAoBU,SAApB,CAAZ;;AAEF,SAAOA,SAAP;AACD,CAtEc,C","file":"guard.js","sourcesContent":["import React from 'react'\nimport { graphql, ApolloProvider, getDataFromTree } from 'react-apollo'\nimport Head from 'next/head'\n\nimport { getDecorator, getComponentDisplayName, getApollo } from './lib'\n\nexport default getDecorator((ComposedComponent, opts) => {\n  class WithGuard extends React.Component {\n    static displayName = `WithGuard(${getComponentDisplayName(\n      ComposedComponent\n    )})`\n\n    static async getInitialProps(ctx) {\n      let guard = null\n\n      let composedInitialProps = {}\n      if (ComposedComponent.getInitialProps) {\n        composedInitialProps = await ComposedComponent.getInitialProps(ctx)\n      }\n\n      const cookieSource = process.browser ? document : ctx.req.headers\n      const apollo = getApollo(null, { cookieSource })\n      try {\n        await getDataFromTree(\n          <ApolloProvider client={apollo}>\n            <ComposedComponent {...composedInitialProps} />\n          </ApolloProvider>,\n          {\n            router: {\n              asPath: ctx.asPath,\n              pathname: ctx.pathname,\n              query: ctx.query\n            }\n          }\n        )\n      } catch (error) {\n      }\n\n      if (!process.browser) {\n        Head.rewind()\n      }\n\n      let data = null\n\n      try {\n        data = apollo.readQuery({ query: opts.query })\n      } catch (e) {\n        opts.error && opts.error(e)\n      }\n\n      try {\n        guard = await opts.guard(data)\n\n        opts.next && opts.next(guard, ctx)\n      } catch (e) {\n        opts.error && opts.error(e)\n      }\n\n      return {\n        guard,\n        ...composedInitialProps\n      }\n    }\n\n    render() {\n      return (\n        <ComposedComponent {...this.props} />\n      )\n    }\n  }\n\n  let decorator = WithGuard\n  if (opts.query)\n    decorator = graphql(opts.query)(decorator)\n\n  return decorator\n})"]}