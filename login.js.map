{"version":3,"sources":["src/login.js"],"names":["initialConfig","configs","defaultOpts","cookieSource","document","variables","updateStore","update","next","authToken","opts","Object","assign","res","loginMutation","store","data","e","console","error","set","days"],"mappings":";;;;;;AAAA;;AAEA;;AAEA;;kBAEeA,iBAAiB,gBAAgB,GAAGC,OAAnB,EAA4B;AAC1D,QAAMC,cAAc;AAClBC,kBAAcC,QADI;AAElBC,eAAW,IAFO;AAGlBC,iBAAa,IAHK;AAIlBC,YAAQ,IAJU;AAKlBC,UAAM,IALY;AAMlBC,eAAW;AANO,GAApB;AAQA,QAAMC,OAAOC,OAAOC,MAAP,CAAcV,WAAd,EAA2BF,aAA3B,EAA0C,GAAGC,OAA7C,CAAb;;AAEA,MAAIY,GAAJ;;AAEA,MAAI;AACFA,UAAM,MAAM,KAAKC,aAAL,CAAmB;AAC7BT,iBAAWK,KAAKL,SADa;AAE7BE,cAAQ,OAAOQ,KAAP,EAAc,EAAEC,IAAF,EAAd,KAA2B;AACjC,YAAIN,KAAKH,MAAT,EAAiB;AACf,cAAI;AACFG,iBAAKH,MAAL,CAAYQ,KAAZ,EAAmBC,IAAnB;AACD,WAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,oBAAQC,KAAR,CAAcF,CAAd;AACD;AACF;AACF;AAV4B,KAAnB,CAAZ;AAYD,GAbD,CAaE,OAAOA,CAAP,EAAU;AACVC,YAAQC,KAAR,CAAcF,CAAd;AACA,WAAO,KAAP;AACD;AACD,QAAMD,OAAOH,IAAIG,IAAjB;;AAEA,MAAI;AACF,UAAMP,YAAYC,KAAKD,SAAL,CAAeO,IAAf,CAAlB;AACA,uBAAQI,GAAR,iCAAoCX,SAApC,EAA+C,EAAEN,cAAcO,KAAKP,YAArB,EAAmCkB,MAAM,GAAzC,EAA/C;AACD,GAHD,CAGE,OAAOJ,CAAP,EAAU;AACVC,YAAQC,KAAR,CAAcF,CAAd;AACA,WAAO,IAAP;AACD;;AAED;;AAEA,MAAIP,KAAKJ,WAAT,EAAsB;AACpB,QAAI;AACF,0BAAaI,KAAKJ,WAAL,CAAiBU,IAAjB,CAAb;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,cAAQC,KAAR,CAAcF,CAAd;AACD;AACF;;AAED,MAAIP,KAAKF,IAAT,EAAe;AACb,QAAI;AACDE,WAAKF,IAAL,CAAUQ,IAAV;AACF,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,cAAQC,KAAR,CAAcF,CAAd;AACD;AACF;;AAED,SAAOD,IAAP;AACD,C","file":"login.js","sourcesContent":["import { Cookies } from 'js-cookies'\n\nimport { CONST_AUTHTOKEN_COOKIE } from './lib/config';\n\nimport { getApolloCache, resetApollo, updateApollo } from './'\n\nexport default initialConfig => async function (...configs) {\n  const defaultOpts = {\n    cookieSource: document,\n    variables: null,\n    updateStore: null,\n    update: null,\n    next: null,\n    authToken: null\n  }\n  const opts = Object.assign(defaultOpts, initialConfig, ...configs)\n\n  let res\n\n  try {\n    res = await this.loginMutation({\n      variables: opts.variables,\n      update: async (store, { data }) => {\n        if (opts.update) {\n          try {\n            opts.update(store, data)\n          } catch (e) {\n            console.error(e)\n          }\n        }\n      }\n    });\n  } catch (e) {\n    console.error(e)\n    return false\n  }\n  const data = res.data\n\n  try {\n    const authToken = opts.authToken(data)\n    Cookies.set(CONST_AUTHTOKEN_COOKIE, authToken, { cookieSource: opts.cookieSource, days: 365 })\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n\n  resetApollo()\n\n  if (opts.updateStore) {\n    try {\n      updateApollo(opts.updateStore(data))\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  if (opts.next) {\n    try {\n       opts.next(data)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  return data\n}"]}